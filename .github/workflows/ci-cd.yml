name: CI & CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # 1️⃣ Build + Unit tests + Coverage
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run unit tests with coverage
        run: npx jest --ci --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/lcov-report

      # Fail job if coverage < 90%
      - name: Check coverage threshold
        run: |
          npx jest --ci --coverage --coverageThreshold='{"global": {"branches":90,"functions":90,"lines":90,"statements":90}}'

  # 2️⃣ Performance tests with k6
  performance-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'perf')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup k6
        uses: grafana/setup-k6@v0.2.0

      - name: Run k6 ramp test
        run: k6 run tests/k6/ramp.js --out json=performance/ramp-summary.json

      - name: Run k6 spike test
        run: k6 run tests/k6/spike.js --out json=performance/spike-summary.json

      - name: Run k6 soak test
        run: k6 run tests/k6/soak.js --out json=performance/soak-summary.json

      - name: Upload performance reports
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: performance/

  # 3️⃣ Deploy (solo si CI + k6 pasan)
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test, performance-tests]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      # Ejemplo: deploy a Render (requiere RENDER_API_KEY en Secrets)
      - name: Deploy backend to Render
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Accept: application/json" \
            https://api.render.com/deploy/srv-xxxxxxxxxxxx

      - name: Output deployment URL
        run: echo "Backend deployed! Check your Render service URL."
