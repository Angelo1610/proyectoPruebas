name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:   # Permite ejecutar el workflow manualmente

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run unit tests with coverage
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: npx jest --ci --coverage --coverageReporters=text --coverageReporters=lcov

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/lcov-report

      - name: Check coverage threshold
        run: |
          npx jest --ci --coverage \
          --coverageThreshold='{"global": {"branches":90,"functions":90,"lines":90,"statements":90}}'

      - name: Add coverage summary to GitHub Actions
        run: |
          echo "## ðŸ“Š Coverage Summary" >> $GITHUB_STEP_SUMMARY
          npx jest --coverage --coverageReporters=text-summary \
          | tee -a $GITHUB_STEP_SUMMARY

  performance-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'perf')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup k6
        uses: grafana/setup-k6@v0.2.0

      - name: Run k6 ramp test
        run: k6 run backend/tests/k6/ramp.js --out json=performance/ramp-summary.json

      - name: Run k6 spike test
        run: k6 run backend/tests/k6/spike.js --out json=performance/spike-summary.json

      - name: Run k6 soak test
        run: k6 run backend/tests/k6/soak.js --out json=performance/soak-summary.json

      - name: Upload performance reports
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: performance/

      - name: Add performance summary
        run: |
          echo "## âš¡ Performance Tests" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Ramp test done" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Spike test done" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Soak test done" >> $GITHUB_STEP_SUMMARY
